name: CI Checks

# Controls when the action will run. 
on:
  # Triggers the workflow on pull request events for dev and main
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Run Jest API Tests'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Based on https://github.com/valora-inc/wallet/blob/main/.github/workflows/check.yml
  lint: 
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - run: npm install
      - run: npm run lint
  package-lock:
    name: 'package-lock.json Up-to-date'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
      - run: npm install
      - run: git diff --exit-code
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      - name: Install dependencies
        run: npm install
      - name: Create .env File
        env:
          SECRET: ${{ secrets.SECRET }}
        run : |
          echo SECRET=$SECRET >> .env
      - name: Run Build
        run: npm run build --if-present
      - name: Run Jest Tests
        run: npm run ci:test
      - name: 'Upload to Codecov'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}